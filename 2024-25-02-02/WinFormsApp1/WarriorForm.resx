<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZDI17dTJkyWh/9k=
</value>
  </data>
</root>